--
--	@(#) dbcreate/cfint/mssql/crsp_update_mjvrdef.tsql
--
--	org.msscf.msscf.CFInt
--
--	Copyright (c) 2020 Mark Stephen Sobkow
--	
--	This file is part of MSS Code Factory.
--	
--	Licensed under the Apache License, Version 2.0 (the "License");
--	you may not use this file except in compliance with the License.
--	You may obtain a copy of the License at
--	
--	    http://www.apache.org/licenses/LICENSE-2.0
--	
--	Unless required by applicable law or agreed to in writing, software
--	distributed under the License is distributed on an "AS IS" BASIS,
--	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
--	See the License for the specific language governing permissions and
--	limitations under the License.
--	
--	Donations to support MSS Code Factory can be made at
--	https://www.paypal.com/paypalme2/MarkSobkow
--
--	Manufactured by MSS Code Factory 2.12
--

use cfinet213
go

create proc sp_update_mjvrdef
	@argAuditClusterId bigint,
	@argAuditUserId varchar(36),
	@argAuditSessionId varchar(36),
	@secClusterId bigint,
	@secTenantId bigint,
	@argClassCode CFINet213ClassCode,
	@argTenantId decimal(21,0),
	@argId decimal(21,0),
	@argSubProjectId decimal(21,0),
	@argName varchar(64),
	@argDescription varchar(1024),
	@argRevision integer
as
	declare @oldRevision int
	declare @oldTenantId decimal(21,0)
	declare @oldAuditCreatedAt datetime2
	declare @oldAuditCreatedBy varchar(36)
	declare @oldAuditUpdatedAt datetime2
	declare @oldAuditUpdatedBy varchar(36)
	declare @permissionFlag int
begin

	if( @argClassCode = 'a102' )
	begin
		exec sp_is_tenant_user @permissionFlag output, @argTenantId, 'UpdateMajorVersion', @argAuditUserId
		if( @permissionFlag = 0 )
		begin
			raiserror( 'Permission denied -- User not found in tenant TSecGroup for UpdateMajorVersion',
				15,
				1 )
		end
	end

	update cfinet213..mjvrdef
	set forcesynclock = forcesynclock + 1
	where
			tenantid = @argTenantId
		and id = @argId
	if @@rowcount != 1
	begin
		raiserror( 'Data collision detected -- primary key does not exist',
			15,
			1 )
	end

	select
		@oldTenantId = a102.tenantid,
		@oldRevision = a102.revision
	from cfinet213..mjvrdef as a102
	where
			a102.tenantid = @argTenantId
			and a102.id = @argId

	if @argRevision != @oldRevision
	begin
		raiserror( 'sp_update_mjvrdef() Data collision detected',
			15,
			1 )
	end


	if( @argClassCode = 'a102' )
	begin
		if( @argTenantId != @oldTenantId )
		begin
			raiserror( 'Permission denied -- TenantId cannot be updated for MajorVersion',
				15,
				1 )
		end
	end

	update cfinet213..mjvrdef
	set
		revision = @argRevision + 1,
		subprojectid = @argSubProjectId,
		safe_name = @argName,
		descr = @argDescription
	where
		tenantid = @argTenantId
		and id = @argId
		and revision = @argRevision

	if @@rowcount != 1
	begin
		raiserror( 'sp_update_mjvrdef() Data collision detected',
			15,
			1 )
	end

	insert into cfinet213..mjvrdef_h (
			tenantid,
			id,
			auditclusterid,
			auditsessionid,
			auditstamp,
			subprojectid,
			safe_name,
			descr,
			revision,
			auditaction )
		select
			a102.tenantid,
			a102.id,
			@argAuditClusterId,
			@argAuditSessionId,
			sysdatetime(),
			a102.subprojectid,
			a102.safe_name,
			a102.descr,
			a102.revision,
			1
		from cfinet213..mjvrdef as a102
		where
			a102.tenantid = @argTenantId
			and a102.id = @argId

	select
			a102.createdby,
			convert( varchar, a102.createdat, 120 ) as createdat,
			a102.updatedby,
			convert( varchar, a102.updatedat, 120 ) as updatedat,
			a102.tenantid as tenantid,
			a102.id as id,
			a102.subprojectid as subprojectid,
			a102.safe_name as safe_name,
			a102.descr as descr,
		a102.revision as revision
	from cfinet213..mjvrdef as a102
	where
		a102.tenantid = @argTenantId
			and a102.id = @argId
end
go


quit
