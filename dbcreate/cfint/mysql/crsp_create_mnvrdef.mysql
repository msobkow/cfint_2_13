--
--	@(#) dbcreate/cfint/mysql/crsp_create_mnvrdef.mysql
--
--	com.github.msobkow.CFInt
--
--	Copyright (c) 2020 Mark Stephen Sobkow
--	
--	This file is part of MSS Code Factory.
--	
--	Licensed under the Apache License, Version 2.0 (the "License");
--	you may not use this file except in compliance with the License.
--	You may obtain a copy of the License at
--	
--	    http://www.apache.org/licenses/LICENSE-2.0
--	
--	Unless required by applicable law or agreed to in writing, software
--	distributed under the License is distributed on an "AS IS" BASIS,
--	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
--	See the License for the specific language governing permissions and
--	limitations under the License.
--	
--	Donations to support MSS Code Factory can be made at
--	https://www.paypal.com/paypalme2/MarkSobkow
--
--	Manufactured by MSS Code Factory 2.12
--
delimiter ////
create procedure cfinet213.sp_create_mnvrdef(
	argAuditClusterId bigint,
	argAuditUserId varchar(36),
	argAuditSessionId varchar(36),
	secClusterId bigint,
	secTenantId bigint,
	argClassCode varchar(4),
	argTenantId bigint,
	argMajorVersionId bigint,
	argName varchar(64),
	argDescription varchar(1024) )
not deterministic
modifies sql data
begin
	declare permissionFlag boolean;
	declare isSystemUser boolean;
	declare argId bigint;
	if( argClassCode = 'a104' )
	then
		select cfinet213.sp_is_tenant_user( argTenantId,
				'CreateMinorVersion',
				argAuditUserId ),
			cfinet213.sp_is_system_user( argAuditUserId )
		into permissionFlag, isSystemUser;

		if( ( permissionFlag = false ) and ( isSystemUser = false ) )
		then
			signal sqlstate '45003'
			set message_text = 'sp_create_mnvrdef() Permission denied, not granted CreateMinorVersion access to current Tenant',
				schema_name = 'cfinet213',
				table_name = 'mnvrdef';
		end if;
	end if;

	select cfinet213.sp_next_minorversionidgen( argTenantId )
	into argId;

	insert into cfinet213.mnvrdef(
		createdby,
		createdat,
		updatedby,
		updatedat,
		tenantid,
		id,
		majorversionid,
		safe_name,
		descr,
		revision )
	values (
		argAuditUserId,
		now(),
		argAuditUserId,
		now(),
		argTenantId,
		argId,
		argMajorVersionId,
		argName,
		argDescription,
		1 );

	insert into cfinet213.mnvrdef_h (
			tenantid,
			id,
			auditclusterid,
			auditsessionid,
			auditstamp,
			majorversionid,
			safe_name,
			descr,
			revision,
			auditaction )
		select
			a104.tenantid,
			a104.id,
			argAuditClusterId,
			argAuditSessionId,
			now(),
			a104.majorversionid,
			a104.safe_name,
			a104.descr,
			a104.revision,
			1
		from cfinet213.mnvrdef as a104
		where
			a104.tenantid = argTenantId
		and a104.id = argId;

	select

			date_format( a104.createdat, '%Y-%m-%d %H:%i:%S' ) as createdat,
			a104.createdby as createdby,
			date_format( a104.updatedat, '%Y-%m-%d %H:%i:%S' ) as updatedat,
			a104.updatedby as updatedby,
			a104.tenantid as tenantid,
			a104.id as id,
			a104.majorversionid as majorversionid,
			a104.safe_name as safe_name,
			a104.descr as descr,
			a104.revision as revision
	from cfinet213.mnvrdef as a104
	where
		a104.tenantid = argTenantId
		and a104.id = argId;
end;////
