--
--	@(#) dbcreate/cfint/mysql/crsp_delete_mnvrdef.mysql
--
--	org.msscf.msscf.CFInt
--
--	Copyright (c) 2020 Mark Stephen Sobkow
--	
--	This file is part of MSS Code Factory.
--	
--	Licensed under the Apache License, Version 2.0 (the "License");
--	you may not use this file except in compliance with the License.
--	You may obtain a copy of the License at
--	
--	    http://www.apache.org/licenses/LICENSE-2.0
--	
--	Unless required by applicable law or agreed to in writing, software
--	distributed under the License is distributed on an "AS IS" BASIS,
--	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
--	See the License for the specific language governing permissions and
--	limitations under the License.
--	
--	Donations to support MSS Code Factory can be made at
--	https://www.paypal.com/paypalme2/MarkSobkow
--
--	Manufactured by MSS Code Factory 2.12
--
delimiter ////
create procedure cfinet213.sp_delete_mnvrdef(
	argAuditClusterId bigint,
	argAuditUserId varchar(36),
	argAuditSessionId varchar(36),
	secClusterId bigint,
	secTenantId bigint,
	argTenantId bigint,
	argId bigint,
	argRevision int )
not deterministic
modifies sql data
begin
	declare RowsAffected bigint;
	declare oldTenantId bigint;
	declare oldId bigint;
	declare oldMajorVersionId bigint;
	declare oldName varchar(64);
	declare oldDescription varchar(1024);
	declare oldRevision int;
	declare permissionFlag boolean;
	declare isSystemUser boolean;
	declare done int default false;
	declare continue handler for not found set done = true;
	select
			TenantId,
		Id,
		MajorVersionId,
		safe_name,
		descr,
			revision
	into
		oldTenantId,
			oldId,
			oldMajorVersionId,
			oldName,
			oldDescription,
		oldRevision
	from cfinet213.mnvrdef
	where
		TenantId = argTenantId
		and Id = argId
	for update;
	if( oldTenantId != secTenantId )
	then
		select cfinet213.sp_is_system_user( argAuditUserId )
		into permissionFlag;

		if( permissionFlag = false )
		then
			signal sqlstate '45001'
			set message_text = 'sp_delete_mnvrdef() Permission denied, not identified as system',
				schema_name = 'cfinet213',
				table_name = 'mnvrdef';
		end if;
	end if;

	select cfinet213.sp_is_tenant_user( oldTenantId,
			'DeleteMinorVersion',
			argAuditUserId ),
		cfinet213.sp_is_system_user( argAuditUserId )
	into permissionFlag, isSystemUser;

	if( ( permissionFlag = false ) and ( isSystemUser = false ) )
	then
		signal sqlstate '45003'
		set message_text = 'sp_delete_mnvrdef() Permission denied, not granted access to DeleteMinorVersion for current Tenant',
			schema_name = 'cfinet213',
			table_name = 'mnvrdef';
	end if;

	insert into cfinet213.mnvrdef_h (
			tenantid,
			id,
			auditclusterid,
			auditsessionid,
			auditstamp,
			majorversionid,
			safe_name,
			descr,
			revision,
			auditaction )
		select
			a104.tenantid,
			a104.id,
			argAuditClusterId,
			argAuditSessionId,
			now(),
			a104.majorversionid,
			a104.safe_name,
			a104.descr,
			a104.revision + 1,
			3
		from cfinet213.mnvrdef as a104
		where
			a104.tenantid = argTenantId
		and a104.id = argId;

	delete from cfinet213.mnvrdef
	where
		tenantid = argTenantId
		and id = argId;
	select row_count()
	into RowsAffected;

	if RowsAffected != 1 and RowsAffected != 0
	then
		signal sqlstate '45000'
		set message_text = 'sp_delete_mnvrdef() Expected to affect 1 mnvrdef',
			schema_name = 'cfinet213',
			table_name = 'mnvrdef';
	end if;

end;////
